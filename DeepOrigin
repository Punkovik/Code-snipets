describe('User Authentication API', () => {
  const loginUrl: string = 'https://dummyjson.com/auth/login';
  const userDetailsUrl: string = 'https://dummyjson.com/auth/me';
  let token: string;

  before(() => {
    cy.request('POST', loginUrl, {
      username: 'kmichelle',
      password: '0lelplR',
    }).then((response) => {
      expect(response.body).to.have.property('token');
      token = response.body.token; 
    });
  });

  it('Login and receive authentication token', () => {
    cy.request('POST', loginUrl, {
      username: 'kmichelle',
      password: '0lelplR',
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.body).to.have.property('token');
    });
  });

  it('Retrieve authenticated user details using the token', () => {
    cy.request({
      method: 'GET',
      url: userDetailsUrl,
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.body).to.have.property('id');
      expect(response.body).to.have.property('username');
      expect(response.body).to.have.property('email');
    });
  });


//For lack of additional details, I also used the second option in my opinion.



describe('User Authentication API', () => {
  it('Login and retrieve user details', () => {
   
    const loginUrl = 'https://dummyjson.com/auth/login';

   
    const credentials = {
      username: 'kmichelle',
      password: '0lelplR',
    };

 
    cy.request('POST', loginUrl, credentials).then((loginResponse) => {
      expect(loginResponse.status).to.eq(200);
      expect(loginResponse.body).to.have.property('token');
      
     
      const userDetailsUrl = 'https://dummyjson.com/auth/me';
      cy.request({
        method: 'GET',
        url: userDetailsUrl,
        headers: {
          Authorization: `Bearer ${loginResponse.body.token}`,
        },
      }).then((userDetailsResponse) => {
        expect(userDetailsResponse.status).to.eq(200);
        expect(userDetailsResponse.body).to.have.property('email');
      });
    });
  });
});
